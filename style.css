* {
    margin:0;
    padding:0;
    font-family:'Times New Roman', Times, serif;
    box-sizing:border-box;
}

.container {
    width:100%;
    min-height:100vh;
    background-image: url(images/bg1.jpg);
    background-repeat: no-repeat;
    background-size: cover;
    background-position: center;
    background-attachment: fixed;
    padding:10px;
}

.todo-app {
    width:100%;
    max-width: 540px;
    background:rgba(255, 255, 255, 0.8);
    margin:100px auto 20px;
    padding:40px 30px 70px;
    border-radius: 10px;
}

.todo-app h2 {
    color:#000000;
    display:flex;
    align-items:center;
    margin-bottom:20px;
}

.todo-app h2 img {
    width:30px;
    margin-left:10px; 
}

.row {
    display:flex;
    align-items: center;
    justify-content: space-between;
    background:#edeef0;
    border-radius:30px;
    padding-left:20px;
    margin-bottom: 25px;
}

input {
    flex:1;
    border:none;
    outline:none;
    background: transparent;
    padding:10px;
}

button {
    border:none;
    outline: none;
    padding:16px 50px;
    background:#22751d;
    color:#fff;
    font-size: 16px;
    cursor:pointer;
    border-radius: 40px;
    transition: transform 0.3s;
}

button:hover {
    transform: scale(1.05);
}

ul li {
    list-style:none;
    font-size:17px;
    padding:12px 8px 12px 50px;
    user-select: none;
    cursor: pointer;
    position: relative;
}

/*
What are Pseudo-Elements?
Pseudo-elements create virtual elements that don’t actually exist in the HTML, but can be styled as if they do.
They always start with double colons (::).

What are Pseudo-Classes in CSS?
A pseudo-class is used to style an element based on its state or behavior — like when you hover over it, or when it's the first child of its parent.
Think of pseudo-classes as saying:
"Style this element when something specific happens or if it meets a certain condition."
Pseudo-Class	What It Does
:hover      	Applies styles when the user hovers over an element

*/

ul li::before {
    content:'';
    position:absolute;
    height:28px;
    width: 28px;
    border-radius:50%;
    background-image: url(images/radio-button.png);
    background-size: cover;
    background-position: center;
    top:8px;
    left:8px;
}

ul li.checked {
    color:#555;
    text-decoration: line-through;
}

ul li.checked::before {
    background-image: url(images/circle.png);
}

/*
+---------------------+
|     ×              |  ← line-height controls this space
+---------------------+
If the text height is small (say 16px), but line-height is 40px, it adds space above and below the text to center it in the box.
✅ Summary:
line-height: 40px makes the text sit vertically centered in a 40px-high container.
It's especially useful when creating circular buttons or icons, like your ❌ delete button.
*/

ul li span {
    position: absolute;
    right:0;
    top:5px;
    width:40px;
    height: 40px;;
    font-size: 22px;
    color:#555;
    line-height: 40px;
    text-align: center;
    border-radius: 50%;
}

ul li span:hover {
    background: #edeef0;
}
